#include <iostream>
using namespace std;

int f[1020][1020];//方案数 
//我们从 2020 个数里选 1010 个放入第一行，那么为了满足同一行中右边的比左边大，只能升序排列。
//同理剩下的 1010 个放入第二行的也要升序排列，那么只要对于任意 i∈[1,1010] 都满足第二行第 i 个大于第一行第 i 个就是一种合法方案。
//从前往后枚举，用 dp[i][j] 表示当前枚举了 i 个数，其中 j 个放入第一行的合法方案数。
int main()
{
    f[0][0] = 1;                                   // 两行一个数字都不放，也是一种方案
    for (int i = 1; i <= 1010; i ++)
        for (int j = 0; j <= i && j <= 1010; j ++)
        {
            if(i - 1 >= j)                         // 转移前的状态也要合法，即第一行的数量不小于第二行的数量
            	f[i][j] += f[i - 1][j] % 2020;
//            if(j)
            	f[i][j] += f[i][j - 1] % 2020;
        }
        
    cout << f[1010][1010] << endl;   
    return 0;
}

